(()=>{"use strict";var t={};function e(t){let e=0,o=!1;return{length:t,get hits(){return e},get isSunk(){return o},hit:function(){e++,e===t&&(o=!0)}}}function o(){const t=Array.from(Array(10),(()=>Array(10).fill().map((()=>({isHit:!1,ship:null}))))),e=[];return{board:t,placeShip:function(o,r,n,i){if(r<0||r>=10||n<0||n>=10)throw new Error("Invalid coordinates");if(i){if(n+o.length>10)throw new Error("Ship placement out of bounds");for(let e=0;e<o.length;e++)if(null!==t[n+e][r].ship)throw new Error("Ship placement overlap");for(let e=0;e<o.length;e++)t[n+e][r]={ship:o,isHit:!1}}else{if(r+o.length>10)throw new Error("Ship placement out of bounds");for(let e=0;e<o.length;e++)if(null!==t[n][r+e].ship)throw new Error("Ship placement overlap");for(let e=0;e<o.length;e++)t[n][r+e]={ship:o,isHit:!1}}e.push(o)},receiveAttack:function(e,o){if(e<0||e>=10||o<0||o>=10)throw new Error("Invalid coordinates");const r=t[o][e];return null!==r.ship&&0==r.isHit?(r.isHit=!0,r.ship.hit(),!0):!(!r||0!=r.isHit||(r.isHit=!0,0))},areAllShipsSunk:function(){return e.every((t=>t.isSunk))}}}t.d=(e,o)=>{for(var r in o)t.o(o,r)&&!t.o(e,r)&&Object.defineProperty(e,r,{enumerable:!0,get:o[r]})},t.o=(t,e)=>Object.prototype.hasOwnProperty.call(t,e),console.log("mazda".split("").reverse().join(""));const r=o(),n=o();function i(t){const o=[5,4,3,3,2];for(let r of o){let o=!1;for(;!o;)try{const n=Math.random()>=.5,i=Math.floor(9*Math.random()),l=Math.floor(9*Math.random());t.placeShip(e(r),i,l,n),o=!0}catch(t){console.error(t)}}}i(r),i(n);const l={attack(t,e,o){t.receiveAttack(e,o)}},a={attack(t){let e=!1;for(;!e;){const o=Math.floor(10*Math.random()),r=Math.floor(10*Math.random()),n=t.board[r][o];console.log(n),n&&!n.isHit&&(t.receiveAttack(o,r),e=!0)}}};let s=l;function c(){s=s===l?a:l}const h=document.getElementById("player-board"),d=document.getElementById("computer-board");function p(t,e){e.innerHTML="";for(let o=0;o<t.board.length;o++)for(let r=0;r<t.board[o].length;r++){const i=document.createElement("div");i.classList.add("square"),null===t.board[o][r].ship&&!0===t.board[o][r].isHit&&(console.log("yo"+t.board[o][r].ship),console.log("is hit"+t.board[o][r].isHit),i.classList.add("miss"),i.textContent="miss"),null!==t.board[o][r].ship&&(!0===t.board[o][r].isHit?(i.classList.add("hit"),i.textContent="hit"):(i.classList.add("ship"),i.textContent="ship")),i.addEventListener("click",(()=>{s!==l||t.board[o][r].isHit||(s.attack(n,r,o),p(n,d),c(),u())})),e.appendChild(i)}}function u(){r.areAllShipsSunk()?alert("Computer wins!"):n.areAllShipsSunk()?alert("Player wins!"):s===a&&(console.log(r.board),s.attack(r),p(r,h),c(),u())}p(r,h),p(n,d),u()})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,