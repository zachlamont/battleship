(()=>{"use strict";console.log("mazda".split("").reverse().join(""))})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibWFpbi5qcyIsIm1hcHBpbmdzIjoibUJBSUFBLFFBQVFDLElBQWtCLFFBSGJDLE1BQU0sSUFBSUMsVUFBVUMsS0FBSyxJIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vYmF0dGxlc2hpcC8uL3NyYy9pbmRleC5qcyJdLCJzb3VyY2VzQ29udGVudCI6WyJmdW5jdGlvbiByZXZlcnNlU3RyaW5nKHN0cikge1xuICByZXR1cm4gc3RyLnNwbGl0KFwiXCIpLnJldmVyc2UoKS5qb2luKFwiXCIpO1xufVxuXG5jb25zb2xlLmxvZyhyZXZlcnNlU3RyaW5nKFwibWF6ZGFcIikpO1xuXG4vL1NISVAgRkFDVE9SWVxuXG5mdW5jdGlvbiBzaGlwKGxlbmd0aCkge1xuICBsZXQgaGl0cyA9IDA7XG4gIGxldCBpc1N1bmsgPSBmYWxzZTtcblxuICBmdW5jdGlvbiBoaXQoKSB7XG4gICAgaGl0cysrO1xuICAgIGlmIChoaXRzID09PSBsZW5ndGgpIHtcbiAgICAgIGlzU3VuayA9IHRydWU7XG4gICAgfVxuICB9XG5cbiAgcmV0dXJuIHtcbiAgICBsZW5ndGgsXG4gICAgZ2V0IGhpdHMoKSB7XG4gICAgICByZXR1cm4gaGl0cztcbiAgICB9LFxuICAgIGdldCBpc1N1bmsoKSB7XG4gICAgICByZXR1cm4gaXNTdW5rO1xuICAgIH0sXG4gICAgaGl0LFxuICB9O1xufVxuXG4vL0dBTUVCT0FSRCBGQUNUT1JZXG5cbmZ1bmN0aW9uIGdhbWVib2FyZCgpIHtcbiAgY29uc3QgYm9hcmQgPSBBcnJheS5mcm9tKEFycmF5KDEwKSwgKCkgPT4gQXJyYXkoMTApLmZpbGwobnVsbCkpO1xuICBjb25zdCBzaGlwcyA9IFtdO1xuXG4gIGZ1bmN0aW9uIHBsYWNlU2hpcChzaGlwLCB4LCB5LCBpc1ZlcnRpY2FsKSB7XG4gICAgaWYgKHggPCAwIHx8IHggPj0gMTAgfHwgeSA8IDAgfHwgeSA+PSAxMCkge1xuICAgICAgdGhyb3cgbmV3IEVycm9yKFwiSW52YWxpZCBjb29yZGluYXRlc1wiKTtcbiAgICB9XG5cbiAgICBpZiAoaXNWZXJ0aWNhbCkge1xuICAgICAgaWYgKHkgKyBzaGlwLmxlbmd0aCA+IDEwKSB7XG4gICAgICAgIHRocm93IG5ldyBFcnJvcihcIlNoaXAgb3V0IG9mIGJvdW5kc1wiKTtcbiAgICAgIH1cblxuICAgICAgZm9yIChsZXQgaSA9IDA7IGkgPCBzaGlwLmxlbmd0aDsgaSsrKSB7XG4gICAgICAgIGlmIChib2FyZFt5ICsgaV1beF0gIT09IG51bGwpIHtcbiAgICAgICAgICB0aHJvdyBuZXcgRXJyb3IoXCJTaGlwcyBvdmVybGFwXCIpO1xuICAgICAgICB9XG4gICAgICB9XG5cbiAgICAgIGZvciAobGV0IGkgPSAwOyBpIDwgc2hpcC5sZW5ndGg7IGkrKykge1xuICAgICAgICBib2FyZFt5ICsgaV1beF0gPSB7IHNoaXA6IHNoaXAsIGlzSGl0OiBmYWxzZSB9O1xuICAgICAgfVxuICAgIH0gZWxzZSB7XG4gICAgICBpZiAoeCArIHNoaXAubGVuZ3RoID4gMTApIHtcbiAgICAgICAgdGhyb3cgbmV3IEVycm9yKFwiU2hpcCBvdXQgb2YgYm91bmRzXCIpO1xuICAgICAgfVxuXG4gICAgICBmb3IgKGxldCBpID0gMDsgaSA8IHNoaXAubGVuZ3RoOyBpKyspIHtcbiAgICAgICAgaWYgKGJvYXJkW3ldW3ggKyBpXSAhPT0gbnVsbCkge1xuICAgICAgICAgIHRocm93IG5ldyBFcnJvcihcIlNoaXBzIG92ZXJsYXBcIik7XG4gICAgICAgIH1cbiAgICAgIH1cblxuICAgICAgZm9yIChsZXQgaSA9IDA7IGkgPCBzaGlwLmxlbmd0aDsgaSsrKSB7XG4gICAgICAgIGJvYXJkW3ldW3ggKyBpXSA9IHsgc2hpcDogc2hpcCwgaXNIaXQ6IGZhbHNlIH07XG4gICAgICB9XG4gICAgfVxuXG4gICAgc2hpcHMucHVzaChzaGlwKTtcbiAgfVxuXG4gIGZ1bmN0aW9uIHJlY2VpdmVBdHRhY2soeCwgeSkge1xuICAgIGlmICh4IDwgMCB8fCB4ID49IDEwIHx8IHkgPCAwIHx8IHkgPj0gMTApIHtcbiAgICAgIHRocm93IG5ldyBFcnJvcihcIkludmFsaWQgY29vcmRpbmF0ZXNcIik7XG4gICAgfVxuXG4gICAgY29uc3Qgc3F1YXJlID0gYm9hcmRbeV1beF07XG4gICAgaWYgKHNxdWFyZSA9PT0gbnVsbCkge1xuICAgICAgcmV0dXJuIGZhbHNlO1xuICAgIH0gZWxzZSB7XG4gICAgICBzcXVhcmUuaXNIaXQgPSB0cnVlO1xuICAgICAgc3F1YXJlLnNoaXAuaGl0KCk7XG4gICAgICByZXR1cm4gdHJ1ZTtcbiAgICB9XG4gIH1cblxuICBmdW5jdGlvbiBhcmVBbGxTaGlwc1N1bmsoKSB7XG4gICAgcmV0dXJuIHNoaXBzLmV2ZXJ5KChzaGlwKSA9PiBzaGlwLmlzU3Vuayk7XG4gIH1cblxuICByZXR1cm4geyBib2FyZCwgcGxhY2VTaGlwLCByZWNlaXZlQXR0YWNrLCBhcmVBbGxTaGlwc1N1bmsgfTtcbn1cblxuZXhwb3J0IHsgcmV2ZXJzZVN0cmluZywgc2hpcCwgZ2FtZWJvYXJkIH07XG4iXSwibmFtZXMiOlsiY29uc29sZSIsImxvZyIsInNwbGl0IiwicmV2ZXJzZSIsImpvaW4iXSwic291cmNlUm9vdCI6IiJ9